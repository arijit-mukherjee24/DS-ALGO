package ds.sorting.algorithms;

import java.util.Arrays;

// https://www.geeksforgeeks.org/radix-sort/
// https://www.youtube.com/watch?v=Il45xNUHGp0
public class RadixSort {

	public static void main(String[] args) {
	
		RadixSort obj = new RadixSort();
		int arr[] = { 432, 8, 530, 90, 88, 231, 11, 45, 677, 199 };
		obj.radixSort(arr); 
		System.out.println("Sorted array using radix sort: ");
		obj.printArray(arr);
	}
	
	void radixSort(int[] arr) {
		int max = Arrays.stream(arr).max().getAsInt();
		int n = arr.length;
		for(int pos = 1; max/pos > 0; pos = pos*10) {
			countingSort(arr, n, pos);
		}
	}

	void countingSort(int[] arr, int n, int pos) {
		int max = Arrays.stream(arr).max().getAsInt();
		int k = max; // range
		int count[] = new int[max + 1];
		int output[] = new int[n];

		for (int i = 0; i < n; i++) {
			++count[arr[i]];
		}

		for (int i = 1; i <=k; i++) {
			count[i] += count[i - 1];
		}

		for (int i = n - 1; i >= 0; i--) {
			output[--count[arr[i]]] = arr[i];
		}

		for (int i = 0; i < n; i++) {
			arr[i] = output[i];
		}
	}

	// Prints the array
	void printArray(int[] arr) {
		for (int i : arr)
			System.out.print(i + " ");
	}

}

/* Note: To deal with -ve number's add the min -ve number to eacg element and find the range" */
